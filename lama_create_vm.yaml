---
- name: Using localhost
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Create a VM
      amazon.aws.ec2_instance:
        name: "{{ i_name }}"
        instance_type: "{{ i_type }}"
        image_id: "{{ i_ami }}"
        key_name: "{{ i_keypair }}"
        vpc_subnet_id: "{{ i_subnet }}"
        security_group: "{{ i_secgrp }}"
        region: us-east-1
        state: started

    - name: Get EC2 Info
      amazon.aws.ec2_instance_info:
        filters:
          "tag:Name": "{{ i_name }}"
          region: us-east-1
      register: ec2_name

    - name: Get instance IP addresses.
      debug:
          msg: "{{ item.0 }} | {{ item.1 }}"
      with_together:
        - "{{ ec2_name.instances | map(attribute='tags.Name') | list }}"
        - "{{ ec2_name.instances[0].private_ip_address }}"

    - name: Add host to inventory
      tower_host:
        name: "{{ ec2_name.instances[0].private_ip_address }}"
        inventory: Test_Demo
        variables:
          ansible_python_interpreter: /usr/bin/python2.7
      delegate_to: localhost

    - name: Add host to dynamic inventory
      add_host:
        name: "{{ ec2_name.instances[0].private_ip_address }}"
        groups: sap_app_server

    - name: DNS A record
      amazon.aws.route53:
        state: present
        private_zone: yes
        zone: "lamapal.aws"
        record: "{{ i_name + '.lamapal.aws' }}"
        type: A
        ttl: 300
        value: "{{  ec2_name.instances[0].private_ip_address }}"
        wait: true
      register: route53_result_1

    - name: Display DNS results
      debug: var=route53_result_1

    - name: DNS PTR record
      amazon.aws.route53:
        state: present
        private_zone: yes
        zone: "200.30.172.in-addr.arpa"
        record: "{{  ec2_name.instances[0].private_ip_address.split('.')[3] }}.{{  ec2_name.instances[0].private_ip_address.split('.')[2] }}.{{  ec2_name.instances[0].private_ip_address.split('.')[1] }}.{{  ec2_name.instances[0].private_ip_address.split('.')[0] }}.in-addr.arpa"
        type: PTR
        ttl: 300
        value: "{{ i_name + '.lamapal.aws' }}"
        wait: true
      register: route53_result_2

    - name: Display PTR results
      debug: var=route53_result_2

- name: Run on new host
  hosts: sap_app_server
  become: yes
  tasks:
    - name: "Check hostname"
      command: "echo {{ i_name }}"
      register: shell_out

    - name: Print the output
      debug:
        msg: "{{ shell_out.stdout_lines }}"

    - name: Set a hostname
      ansible.builtin.hostname:
        name: "{{ i_name }}"

    - name: "MOUNT NFS SHARE"
      command: "mount {{ lama_ip }}:/work /mnt"
      register: shell_out

    - name: Print the output
      debug:
        msg: "{{ shell_out.stdout_lines }}"

    - name: "Upgrade hostagent and sapacext"
      command: "/mnt/upgrade_hostagent.sh"
      register: shell_out

    - name: Print the output
      debug:
        msg: "{{ shell_out.stdout_lines }}"

    - name: "UNMOUNT NFS SHARE"
      command: "umount /mnt"
      register: shell_out

    - name: Print the output
      debug:
        msg: "{{ shell_out.stdout_lines }}"

    - name: Set target host variables for next play
      set_fact:
        target_ip: "{{ ansible_default_ipv4.address }}"
        target_host: "{{ i_name }}"

    - name: add variables to dummy host
      add_host:
        name: "variable_holder"
        shared_variable1:  "{{ target_ip }}"
        shared_variable2:  "{{ target_host }}"

    - name: Print target IP address
      debug:
        var: target_ip


- name: Run on LaMa host
  hosts: "{{ lama_ip }}"
  gather_facts: true
  become: yes
  vars:
    my_target_ip: "{{ hostvars['variable_holder']['shared_variable1'] }}"
    my_target_host: "{{ hostvars['variable_holder']['shared_variable2'] }}"
  tasks:
    - name: Update LaMa host file
      ansible.builtin.lineinfile:
        path: /etc/hosts
        insertafter: '^#Ansible Inserts'
        line: '{{ my_target_ip }} {{ my_target_host }}'
        state: present
        regexp: "^{{ my_target_ip|regex_escape() }}.*{{ my_target_host|regex_escape() }}$"
